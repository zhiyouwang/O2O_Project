2019-07-14 10:16:19.210 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryByShopId] use [master] Strategy, SqlCommanType [SELECT]..
2019-07-14 10:16:19.213 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：master
2019-07-14 10:16:19.222 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id AND s.shop_id=? 
2019-07-14 10:16:19.246 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==> Parameters: 1(Long)
2019-07-14 10:16:19.267 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - <==      Total: 1
2019-07-14 10:16:19.274 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.insertShop] use [master] Strategy, SqlCommanType [INSERT]..
2019-07-14 10:16:19.275 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：master
2019-07-14 10:16:19.275 [main] DEBUG com.JunWang.o2o.dao.ShopDao.insertShop - ==>  Preparing: INSERT INTO tb_shop(owner_id,area_id,shop_category_id,shop_name,shop_desc,shop_addr,phone,shop_img,priority,create_time, last_edit_time,enable_status,advice) VALUES (?,?,?,?,?,?,?, ?,?,?,?,?,?) 
2019-07-14 10:16:19.282 [main] DEBUG com.JunWang.o2o.dao.ShopDao.insertShop - ==> Parameters: null, null, null, 修改后的店铺名称(String), null, null, null, null, null, 2019-07-14 10:16:19.274(Timestamp), 2019-07-14 10:16:19.274(Timestamp), 0(Integer), null
2019-07-14 10:19:10.723 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 10:19:10.724 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 10:19:10.738 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id AND s.shop_id=? 
2019-07-14 10:19:10.798 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==> Parameters: 1(Long)
2019-07-14 10:19:10.821 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - <==      Total: 1
2019-07-14 10:19:10.829 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.insertShop] use [master] Strategy, SqlCommanType [INSERT]..
2019-07-14 10:19:10.829 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：master
2019-07-14 10:19:10.830 [main] DEBUG com.JunWang.o2o.dao.ShopDao.insertShop - ==>  Preparing: INSERT INTO tb_shop(owner_id,area_id,shop_category_id,shop_name,shop_desc,shop_addr,phone,shop_img,priority,create_time, last_edit_time,enable_status,advice) VALUES (?,?,?,?,?,?,?, ?,?,?,?,?,?) 
2019-07-14 10:19:10.836 [main] DEBUG com.JunWang.o2o.dao.ShopDao.insertShop - ==> Parameters: null, null, null, 修改后的店铺名称(String), null, null, null, null, null, 2019-07-14 10:19:10.829(Timestamp), 2019-07-14 10:19:10.829(Timestamp), 0(Integer), null
2019-07-14 10:20:41.278 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 10:20:41.279 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 10:20:41.299 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id AND s.shop_id=? 
2019-07-14 10:20:41.382 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==> Parameters: 1(Long)
2019-07-14 10:20:41.403 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - <==      Total: 1
2019-07-14 10:20:41.424 [main] DEBUG com.JunWang.o2o.util.ImageUtil - current relativeAddr is:upload\item\shop\1\2019071410204150376.png
2019-07-14 10:20:41.425 [main] DEBUG com.JunWang.o2o.util.ImageUtil - current complete addr is:G:\image\upload\item\shop\1\2019071410204150376.png
2019-07-14 10:20:41.425 [main] DEBUG com.JunWang.o2o.util.ImageUtil - basePath is:/G:/O2Oproject/o2o/target/test-classes/
2019-07-14 10:20:41.544 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.updateShop] use [master] Strategy, SqlCommanType [UPDATE]..
2019-07-14 10:20:41.544 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：master
2019-07-14 10:20:41.562 [main] DEBUG com.JunWang.o2o.dao.ShopDao.updateShop - ==>  Preparing: update tb_shop SET shop_name=?, shop_img=?, last_edit_time=? where shop_id=? 
2019-07-14 10:20:41.565 [main] DEBUG com.JunWang.o2o.dao.ShopDao.updateShop - ==> Parameters: 修改后的店铺名称(String), upload\item\shop\1\2019071410204150376.png(String), 2019-07-14 10:20:41.544(Timestamp), 1(Long)
2019-07-14 10:20:41.611 [main] DEBUG com.JunWang.o2o.dao.ShopDao.updateShop - <==    Updates: 1
2019-07-14 10:20:41.612 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryByShopId] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 10:20:41.612 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 10:20:41.612 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id AND s.shop_id=? 
2019-07-14 10:20:41.613 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - ==> Parameters: 1(Long)
2019-07-14 10:20:41.615 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryByShopId - <==      Total: 1
2019-07-14 15:16:58.966 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:16:58.967 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:16:58.985 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.owner_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:16:59.052 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 1(Long), 1(Integer), 3(Integer)
2019-07-14 15:16:59.078 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 3
2019-07-14 15:19:47.078 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:19:47.080 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:19:47.100 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.owner_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:19:47.161 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 1(Long), 1(Integer), 3(Integer)
2019-07-14 15:19:47.189 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 3
2019-07-14 15:19:47.197 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:19:47.197 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:19:47.197 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.owner_id = ? AND s.area_id=a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-07-14 15:19:47.198 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==> Parameters: 1(Long)
2019-07-14 15:19:47.200 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - <==      Total: 1
2019-07-14 15:24:20.328 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:24:20.330 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:24:20.347 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.owner_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:24:20.404 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 1(Long), 1(Integer), 3(Integer)
2019-07-14 15:24:20.427 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 3
2019-07-14 15:24:20.434 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:24:20.434 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:24:20.435 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.owner_id = ? AND s.area_id=a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-07-14 15:24:20.435 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==> Parameters: 1(Long)
2019-07-14 15:24:20.437 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - <==      Total: 1
2019-07-14 15:24:20.438 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:24:20.438 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:24:20.439 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? and s.owner_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:24:20.440 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 2(Long), 1(Long), 0(Integer), 2(Integer)
2019-07-14 15:24:20.461 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 2
2019-07-14 15:24:20.462 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:24:20.462 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:24:20.462 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? and s.owner_id = ? AND s.area_id=a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-07-14 15:24:20.463 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==> Parameters: 2(Long), 1(Long)
2019-07-14 15:24:20.464 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - <==      Total: 1
2019-07-14 15:44:16.375 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:44:16.377 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:44:16.397 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:44:16.462 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 2(Long), 0(Integer), 2(Integer)
2019-07-14 15:44:16.490 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 2
2019-07-14 15:44:16.498 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:44:16.498 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:44:16.498 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? AND s.area_id=a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-07-14 15:44:16.499 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==> Parameters: 2(Long)
2019-07-14 15:44:16.500 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - <==      Total: 1
2019-07-14 15:45:05.933 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:45:05.936 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:45:05.955 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:45:06.014 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 2(Long), 0(Integer), 2(Integer)
2019-07-14 15:45:06.041 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 2
2019-07-14 15:45:06.051 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:45:06.051 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:45:06.051 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? AND s.area_id=a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-07-14 15:45:06.052 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==> Parameters: 2(Long)
2019-07-14 15:45:06.054 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - <==      Total: 1
2019-07-14 15:45:51.407 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopList] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:45:51.408 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:45:51.425 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.create_time, s.last_edit_time, s.enable_status, s.advice, a.area_id, a.area_name, sc.shop_category_id, sc.shop_category_name FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? AND s.area_id = a.area_id AND s.shop_category_id = sc.shop_category_id ORDER BY s.priority DESC LIMIT ?,?; 
2019-07-14 15:45:51.496 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - ==> Parameters: 2(Long), 2(Integer), 2(Integer)
2019-07-14 15:45:51.519 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopList - <==      Total: 1
2019-07-14 15:45:51.529 [main] DEBUG c.J.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[com.JunWang.o2o.dao.ShopDao.queryShopCount] use [slave] Strategy, SqlCommanType [SELECT]..
2019-07-14 15:45:51.530 [main] DEBUG com.JunWang.o2o.dao.split.DynamicDataSourceHolder - 所使用的的数据源是：slave
2019-07-14 15:45:51.530 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==>  Preparing: SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc WHERE s.shop_category_id = ? AND s.area_id=a.area_id AND s.shop_category_id = sc.shop_category_id 
2019-07-14 15:45:51.531 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - ==> Parameters: 2(Long)
2019-07-14 15:45:51.532 [main] DEBUG com.JunWang.o2o.dao.ShopDao.queryShopCount - <==      Total: 1
